// Sass map to define colors. Each set should have a "Dark" variation when required.
// e.g. `default` and `default-dark`. Or `purple` and `purple-dark`.
$button-colors: (
  primary: (
    text: clr(text-inverse),
    bg: clr(primary),
    text-hover: clr(text-inverse),
    bg-hover: clr(secondary),
  ),
  secondary: (
    text: clr(text-inverse),
    bg: clr(secondary),
    text-hover: clr(text-inverse),
    bg-hover: clr(primary),
  ),
  yale: (
    text: clr(text-inverse),
    bg: clr(background-inverse),
    text-hover: clr(text-inverse),
    bg-hover: clr(primary),
  ),
  yale-light: (
    text: color(gray-22),
    bg: clr(muted),
    text-hover: clr(text-inverse),
    bg-hover: clr(primary),
  ),
  muted: (
    text: clr(text-inverse),
    bg: clr(accent),
    text-hover: clr(text-inverse),
    bg-hover: clr(primary),
  ),
  muted-dark: (
    text: clr(text-inverse),
    bg: color(gray-4a),
    text-hover: clr(text-inverse),
    bg-hover: clr(primary),
  ),
);

// Mixin to define colors for one or more schemes.
// Simply pass the color scheme to the mixin to get the colors defined in the map.
// e.g. @include buttonColors(default) will get all of the colors defined in the "default" section.
@mixin buttonColors(
  $scheme,
  $pallate: map-get($button-colors, $scheme),
  $map: $button-colors
) {
  color: map-get($pallate, text);
  background-color: map-get($pallate, bg);

  &:visited {
    color: map-get($pallate, text);
  }

  &:hover {
    color: map-get($pallate, text-hover);
    background-color: map-get($pallate, bg-hover);
  }
}

// The button-base mixin contains styles that apply to all buttons
// regardless of color or size.
@mixin button-base {
  border: none;
  border-radius: 5px;
  cursor: pointer;
  display: inline-block;
  font-size: 1.6rem;
  font-weight: bold;
  line-height: 1.21;
  margin: 2rem 0 1.6rem;
  padding: 1.4rem $space;
  text-decoration: none;
  text-align: center;
}

// Button color variations
// Note how we include dark mode options for each
@mixin button-color-primary {
  @include buttonColors(primary);

//   @media (prefers-color-scheme: dark) {
//     @include buttonColors(primary-dark);
//   }
}

@mixin button-color-secondary {
  @include buttonColors(secondary);
}

@mixin button-color-yale {
  @include buttonColors(yale);
}

@mixin button-color-yale-light {
  @include buttonColors(yale-light);
}

@mixin button-color-muted {
  @include buttonColors(muted);
}

@mixin button-color-muted-dark {
  @include buttonColors(muted-dark);
}

// Button size variations
@mixin button-medium {
  font-size: 2.4rem;
  line-height: 1.49;
  padding: 1rem 2rem;
}

@mixin button-large {
  line-height: 2;
  padding: $space $space-double;
}

@mixin button-bg {
  &--primary {
    @include button-color-primary;
  }

  &--secondary {
    @include button-color-secondary;
  }

  &--yale {
    @include button-color-yale;
  }

  &--yale-light {
    @include button-color-yale-light;
  }

  &--muted {
    @include button-color-muted;
  }

  &--muted-dark {
    @include button-color-muted-dark;
  }
}

.button {
  @include button-base;
  @include button-bg;
}
